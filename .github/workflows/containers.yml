name: Build Docker Containers for OpenEdge
on:
  push:
    branches: [ main ]
    paths: 
      - src/**
      - .github/workflows/*.yml

jobs:
    docker:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                version: [ 12.2.17, 12.8.4 ]
                containertype: [ "4GL", "PAS_DEV", "PAS_PROD", "DB_ADV" ]

        steps:

            -   name: Checkout repository
                uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29  # v4.1.6
                with:
                    path: build

            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Get OpenEdge version
                id: get-oeversion
                uses: bfv/openedge-flatversion@v1.1.0
                with:
                    version: ${{ matrix.version }}

            -   name: OE Versions to ENV
                run: 
                    echo "OE_VERSION=${{ matrix.version }}" >> $GITHUB_ENV
                    echo "OE_VERSION_FLAT=${{ steps.get-oeversion.outputs.flat-version }}" >> $GITHUB_ENV
                    echo "OE_BASE_FLAT=${{ steps.get-oeversion.outputs.base-version }}" >> $GITHUB_ENV

            -   name: ContainerType to ENV
                run: 
                    echo "CONTAINERTYPE=${{ matrix.containertype }}" >> $GITHUB_ENV
                    echo CTLOW=${{ matrix.containertype }},,[GLDBAVPSEOR] >> $GITHUB_ENV
                    
            -   name: Insert JDK version in Dockerfile
                run: |
                    jdk=`jq -r ".jdk${{ env.OE_VERSION_FLAT }}" build/jdkversions.json`
                    echo JDK: $jdk
                    sed -i "s/JDKVERSION/$jdk/g" build/compiler/Dockerfile
                    echo download jdk from Dockerfile:
                    cat build/compiler/Dockerfile | grep temurin      
      
            -   name: Download installer files
                run: |
                    build/scripts/download-oe.sh

            -   name: Get correct response.ini  # get progress.cfg from secret PROGRESS_CFG_122
                run: |
                      echo fetching response.ini/progress.cfg from secret RESPONSE_INI_${{ env.OE_VERSION_FLAT}}
                      echo "${{ secrets[format('RESPONSE_INI_{0}_{1}', env.OE_VERSION_FLAT, env.CONTAINERTYPE)] }}" > build/response.ini

            -   name: Build and push
                uses: docker/build-push-action@v5
                with:
                    context: "${{ github.workspace }}/build/compiler"
                    push: true
                    tags: progressofficial/oe_${{ env.CTLOW }}:${{ env.OE_VERSION }}
                    build-args: |
                        CONTAINERTYPE=${{ env.CONTAINERTYPE }}

            -   name: Remove files used by installer
                run: |
                        cd build
                        rm -f PROGRESS_*
                        rm response.ini
                        ls -l
        

 
